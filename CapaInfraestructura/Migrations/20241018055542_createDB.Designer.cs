// <auto-generated />
using System;
using CapaInfraestructura.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaInfraestructura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241018055542_createDB")]
    partial class createDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaDominio.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CapaDominio.Entities.Evento", b =>
                {
                    b.Property<int>("EventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoID"));

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EventoID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("CapaDominio.Entities.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RedID")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonaID");

                    b.HasIndex("RedID");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("CapaDominio.Entities.Red", b =>
                {
                    b.Property<int>("RedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RedID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RedID");

                    b.ToTable("Redes");
                });

            modelBuilder.Entity("CapaDominio.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<decimal>("DescuentoAplicado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EventoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaLimiteDescuento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioAbonado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TicketID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("EventoID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CapaDominio.Entities.Persona", b =>
                {
                    b.HasOne("CapaDominio.Entities.Red", "Red")
                        .WithMany("Personas")
                        .HasForeignKey("RedID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Red");
                });

            modelBuilder.Entity("CapaDominio.Entities.Ticket", b =>
                {
                    b.HasOne("CapaDominio.Entities.Categoria", "Categoria")
                        .WithMany("Tickets")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapaDominio.Entities.Evento", "Evento")
                        .WithMany("Tickets")
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapaDominio.Entities.Persona", "Persona")
                        .WithMany("Tickets")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Evento");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("CapaDominio.Entities.Categoria", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CapaDominio.Entities.Evento", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CapaDominio.Entities.Persona", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CapaDominio.Entities.Red", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
